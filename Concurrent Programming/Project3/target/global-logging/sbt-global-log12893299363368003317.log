[0m[[0m[0mdebug[0m] [0m[0m> Exec(collectAnalyses, None, Some(CommandSource(network-1)))[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: initialized: JsonRpcNotificationMessage(2.0, initialized, {})[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/logMessage, {"type":4,"message":"Processing"})[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didOpen: JsonRpcNotificationMessage(2.0, textDocument/didOpen, {"textDocument":{"uri":"file:///c%3A/Users/seank/Desktop/MSU/Spring%202022/Concurrent%20Programming/cs39acspring2020assignment03-xDazed/src/main/scala/edu/msudenver/cs/cs39ac/MyScalatraServlet.scala","languageId":"scala","version":1,"text":"/* @author Sean Kruse - Collobarated with Christian Lopez, Christian Mudd, And Alexander Sanford\r\n   @sources Learning Concurrent Programming in Scala: @author Aleksandar Prokopec.\r\n            Scalatra in Action: @authors Dave Hrycyszyn, Stefan Olligenger , Ross Baker.\r\n            Dr. Beaty\r\n            https://www.baeldung.com/scala/check-file-path-exists\r\n            https://scalatra.org/guides/2.5/http/actions.html\r\n4/13/2022 - Got environment set up and running\r\n4/15/2022 - Started scala review with Christian Lopez. We wrote methods in a shared review file and started tinkering with different objectives to learn the basics\r\n4/18/2022 - Implemented buildfile method using the back to the future slide that Dr. Beaty provided\r\n            (Sourced from Learning Concurrent Programming in Scala: @author Aleksandar Prokopec)\r\n4/22/2022 - Started reading Scalatra in Action: @authors Dave Hrycyszyn, Stefan Olligenger , Ross Baker and implementing file serving methods\r\n4/23/2022 - I got the file to be served up by Jetty, found example code that Dr. Beaty provided on Canvas to get the file contents wrapped in a future\r\n            and got the future to be served up to localhost\r\n4/24/2022 - Implemented some case switching to handle the file not found(Christian Lopez implmented a method that we worked on previously and adapted it to work with the code provided by Dr. Beaty)\r\n            Some finishing touches were added. Handled the 404 better, added a test, updated the readme file, added instructions to Github.\r\n */\r\npackage edu.msudenver.cs.cs39ac\r\n\r\nimport org.scalatra._\r\nimport scala.io.Source\r\nimport java.io.File\r\nimport java.nio.file.{Paths, Files}\r\nimport scala.concurrent.{ExecutionContext, Future}\r\nimport scala.concurrent.ExecutionContext.Implicits.global\r\nimport org.scalatra.{AsyncResult, FutureSupport, ScalatraServlet}\r\nimport org.scalatra.{InternalServerError, NotFound, ScalatraServlet}\r\nimport scala.concurrent.{Await, Future}\r\nimport scala.concurrent.duration.{Duration, MILLISECONDS}\r\n\r\nclass MyScalatraServlet extends ScalatraServlet {\r\n\r\n  // Files.exists(Paths.get(\"src/main/twirl/views/hello.scala.html\")) match {\r\n  // case true  => print(\"\\n File found \\n\")\r\n  // case false => print(\"File Not Found\")\r\n  // }\r\n\r\n  // Code snippet provided by Dr. Beaty - posted on Canvas\r\n  def getFileContents(filename: String): Future[String] = Future {\r\n    val f = Source.fromFile(filename)\r\n    try f.getLines.mkString(\"\\n\")\r\n    finally f.close()\r\n  }\r\n\r\n  get(\"/:URL\") {\r\n    contentType = \"text/html\"\r\n    Files.exists(Paths.get(params(\"URL\"))) match {\r\n      // Code snippet provided by Dr. Beaty\r\n      case true => {\r\n        val s = Await.ready(\r\n          getFileContents(params(\"URL\")),\r\n          Duration(100, MILLISECONDS)\r\n        ); s.value.get.get\r\n      }\r\n      case false => {\r\n        halt(\r\n          404,\r\n          <h1>404: File not found</h1>\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  // Scalatra in Action (Code Example): Authors @Dave Hrycyszyn, @Stefan Olligenger , @Ross Baker\r\n  // I shared these resources with Christian Mudd and Christian Lopez\r\n  // notFound {\r\n  // serveStaticResource() getOrElse halt(\r\n  // 404,\r\n  // <h1>404: URL not found, navigate to \"localhost:8080/hello.scala.html\" </h1>\r\n  // )\r\n  // }\r\n\r\n  // Scalatra in Action (Code Example): Authors @Dave Hrycyszyn, @Stefan Olligenger, @Ross Baker\r\n  // I shared these resources with Christian Mudd and Christian Lopez\r\n  error { case e: Exception =>\r\n    InternalServerError(<h1>500: Oops, something went wrong</h1>)\r\n  }\r\n}\r\n"}})[0m
[0m[[0m[0mdebug[0m] [0m[0mEvaluating tasks: Compile / collectAnalyses[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0mdebug[0m] [0m[0manalysis location (C:\Users\seank\Desktop\MSU\Spring 2022\Concurrent Programming\cs39acspring2020assignment03-xDazed\target\scala-2.13\zinc\inc_compile_2.13.zip,true)[0m
[0m[[0m[32msuccess[0m] [0m[0mTotal time: 1 s, completed Apr 25, 2022, 1:54:47 PM[0m
[0m[[0m[0mdebug[0m] [0m[0mjsonRpcNotify: JsonRpcNotificationMessage(2.0, build/logMessage, {"type":4,"message":"Done"})[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0mForcing garbage collection...[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didOpen: JsonRpcNotificationMessage(2.0, textDocument/didOpen, {"textDocument":{"uri":"file:///c%3A/Users/seank/Desktop/MSU/Spring%202022/Concurrent%20Programming/cs39acspring2020assignment03-xDazed/src/test/scala/edu/msudenver/cs/cs39ac/MyScalatraServletTests.scala","languageId":"scala","version":1,"text":"package edu.msudenver.cs.cs39ac\r\n\r\nimport org.scalatra.test.scalatest._\r\n\r\nclass MyScalatraServletTests extends ScalatraFunSuite {\r\n\r\n  addServlet(classOf[MyScalatraServlet], \"/*\")\r\n\r\n  test(\"GET / on MyScalatraServlet should return status 200\") {\r\n    get(\"/\") {\r\n      status should equal(200)\r\n    }\r\n  }\r\n\r\n  test(\"GET /hello on MyScalatraServlet should return status 404\") {\r\n    get(\"/hello\") {\r\n      status should equal(404)\r\n    }\r\n  }\r\n}\r\n"}})[0m
