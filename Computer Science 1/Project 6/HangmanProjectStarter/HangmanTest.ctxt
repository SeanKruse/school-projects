#BlueJ class context
comment0.target=HangmanTest
comment0.text=\r\n\ Scaffolding\ for\ and\ examples\ of\ test\ methods\ for\ the\ Hangman\ class.\r\n\ These\ must\ be\ modified\ and\ extended.\r\n\ As\ presented,\ this\ is\ not\ a\ complete\ effective\ set\ of\ tests.\r\n\r\n\ @author\ \ Dr.\ Jody\ Paul\r\n\ @version\ 1.6.0\r\n
comment1.params=
comment1.target=HangmanTest()
comment1.text=\r\n\ Default\ constructor\ for\ test\ class\ HangmanTest\r\n
comment10.params=
comment10.target=void\ notEnoughGuessesAllowedTest()
comment10.text=\r\n\ Checks\ that\ the\ constructor\ throws\ IllegalArgumentException\r\n\ if\ number\ of\ guesses\ is\ less\ than\ 1.\r\n
comment11.params=
comment11.target=void\ tooManyGuessesTest()
comment11.text=\r\n\ Checks\ that\ the\ record\ method\ throws\ IllegalStateException\r\n\ if\ no\ guesses\ left.\r\n
comment12.params=
comment12.target=void\ repeatedGoodGuessTest()
comment12.text=\r\n\ Checks\ that\ the\ record\ method\ throws\ IllegalArgumentException\r\n\ if\ a\ correct\ letter\ was\ already\ guessed.\r\n
comment13.params=
comment13.target=void\ repeatedBadGuessTest()
comment13.text=\r\n\ Checks\ that\ the\ record\ method\ throws\ IllegalArgumentException\r\n\ if\ an\ incorrect\ letter\ was\ already\ guessed.\r\n
comment14.params=
comment14.target=void\ stablePatternTest()
comment14.text=\r\n\ Checks\ that\ pattern\ doesn't\ change\ if\ no\ guess\r\n\ or\ after\ wrong\ guesses.\r\n\ Relies\ on\ the\ record\ method.\r\n
comment15.params=
comment15.target=void\ patternTest()
comment15.text=\r\n\ Checks\ one\ path\ of\ pattern\ creations.\r\n\ Relies\ on\ the\ record\ method.\r\n
comment16.params=
comment16.target=void\ guessesTest()
comment16.text=\r\n\ Checks\ behavior\ of\ the\ guesses\ method.\r\n\ Relies\ on\ the\ record\ method.\r\n\ <b>TODO\ Write\ the\ body\ of\ this\ method</b>\r\n
comment17.params=
comment17.target=void\ guessExampleTest()
comment17.text=\r\n\ Checks\ integration\ of\ record,\r\n\ guesses,\ and\ guessesLeft\ methods.\r\n
comment18.params=
comment18.target=void\ recordOneWordTest()
comment18.text=\r\n\ Checks\ integration\ of\ record,\r\n\ pattern,\ and\ guessesLeft\ methods\ when\r\n\ used\ with\ a\ single-word\ dictionary.\r\n
comment2.params=
comment2.target=void\ setUp()
comment2.text=\r\n\ Sets\ up\ the\ test\ fixture.\r\n\ Called\ before\ every\ test\ case\ method.\r\n
comment3.params=
comment3.target=void\ tearDown()
comment3.text=\r\n\ Tears\ down\ the\ test\ fixture.\r\n\ Called\ after\ every\ test\ case\ method.\r\n
comment4.params=
comment4.target=void\ wrongGuessLimitTest()
comment4.text=\r\n\ Checks\ behavior\ of\ the\ wrongGuessLimit\ method.\r\n\ <b>TODO\ Write\ the\ body\ of\ this\ method</b>\r\n
comment5.params=
comment5.target=void\ dictionaryInitializationTest()
comment5.text=\r\n\ Checks\ that\ the\ dictionary\ was\ not\ modified\r\n\ during\ Hangman\ construction.\r\n
comment6.params=
comment6.target=void\ numberOfGuessesInitializationTest()
comment6.text=\r\n\ Checks\ initialization\ of\ number\ of\ guesses\r\n\ remaining.\r\n\ Relies\ on\ the\ guessesLeft\ method.\r\n
comment7.params=
comment7.target=void\ initialPatternTest()
comment7.text=\r\n\ Checks\ initial\ pattern,\ comprised\ of\ all\ dashes.\r\n
comment8.params=
comment8.target=void\ noWordsMatchLengthTest()
comment8.text=\r\n\ Checks\ that\ the\ constructor\ throws\ IllegalArgumentException\r\n\ if\ no\ words\ in\ the\ dictionary\ match\ the\ desired\ length.\r\n
comment9.params=
comment9.target=void\ invalidWordLengthTest()
comment9.text=\r\n\ Checks\ that\ the\ constructor\ throws\ IllegalArgumentException\r\n\ if\ word\ length\ is\ less\ than\ 1.\r\n
numComments=19
