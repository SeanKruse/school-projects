#BlueJ class context
comment0.target=Gym
comment0.text=\n\ Represents\ a\ gym\ for\ the\ Gym\ Membership\ project.\n\ @author\ Dr.\ Jody\ Paul\n\ @version\ 1.4\n
comment1.params=nameOfGym\ membershipTypes\ membershipRates\ personalTrainerRate
comment1.target=Gym(java.lang.String,\ MembershipType[],\ java.lang.Double[],\ double)
comment1.text=\n\ Construct\ a\ gym\ from\ the\ specified\ parameters.\n\ Validates\ parameter\ values\ and\ substitutes\ defaults\ if\ any\ are\ invalid.\n\ @param\ nameOfGym\ the\ name\ of\ the\ gym;\ must\ be\ no\ more\ than\ 20\ characters\n\ @param\ membershipTypes\ the\ types\ of\ memberships\ for\ the\ gym\n\ @param\ membershipRates\ the\ rates\ corresponding\ to\ the\ membershipTypes\n\ @param\ personalTrainerRate\ the\ rate\ for\ one\ hour\ with\ a\ personal\ trainer\n
comment10.params=memberRateType
comment10.target=double\ getGymRate(MembershipType)
comment10.text=\n\ Access\ membership\ rates\ for\ this\ gym.\n\ @param\ memberRateType\ the\ membership\ type\ to\ look\ up\n\ @return\ the\ rate\ corresponding\ to\ the\ specified\ membership\ type\n
comment11.params=
comment11.target=java.lang.String\ getGymName()
comment11.text=\n\ Access\ the\ name\ of\ this\ gym.\n\ @return\ the\ gym\ name\n
comment12.params=
comment12.target=double\ getPersonalTrainerRate()
comment12.text=\n\ Access\ the\ personal\ trainer\ rate\ of\ this\ gym.\n\ @return\ the\ personal\ trainer\ rate\n
comment13.params=
comment13.target=java.util.List\ getMembers()
comment13.text=\n\ Access\ the\ collection\ of\ members\ of\ this\ gym.\n\ @return\ the\ members\n
comment14.params=gymNewName
comment14.target=void\ setGymName(java.lang.String)
comment14.text=\n\ Modify\ the\ name\ of\ this\ gym.\n\ @param\ gymNewName\ the\ new\ name\ for\ this\ gym\n
comment15.params=personalTrainerRate
comment15.target=void\ setPersonalTrainerRate(double)
comment15.text=\n\ Modify\ the\ personal\ trainer\ rate\ of\ this\ gym.\n\ @param\ personalTrainerRate\ the\ new\ trainer\ rate\n
comment16.params=typeOfMember\ rate
comment16.target=void\ setGymRate(MembershipType,\ double)
comment16.text=\n\ Modify\ a\ given\ membership\ rate\ of\ this\ gym.\n\ @param\ typeOfMember\ the\ type\ of\ membership\ rate\ to\ be\ modified\n\ @param\ rate\ the\ new\ rate\ for\ the\ given\ type\ of\ membership\n
comment17.params=
comment17.target=java.lang.String\ toString()
comment17.text=\n\ Create\ displayable\ rendering\ of\ this\ gym.\n\ Returns\ a\ new\ string,\n\ <CODE>"Gym\ Name\:\ </CODE><I>NameOfGym</I><CODE>"</CODE>,\n\ where\ NameOfGym\ is\ the\ name\ of\ this\ gym.\n\ @return\ <CODE>"Gym\ Name\:\ </CODE><I>nameOfGym</I><CODE>"</CODE>\n
comment2.params=types\ rates
comment2.target=java.util.Map\ createRateTable(MembershipType[],\ java.lang.Double[])
comment2.text=\n\ Create\ a\ mapping\ between\ membership\ types\ and\ rates.\n\ @param\ types\ ordered\ array\ of\ membership\ types\n\ @param\ rates\ ordered\ array\ of\ membership\ rates\n\ @return\ map\ of\ types\ to\ rates\ based\ on\ position\ in\ the\ parameters\n
comment3.params=gymRate
comment3.target=boolean\ validRate(double)
comment3.text=\n\ Determine\ whether\ the\ rate\ is\ valid.\n\ @param\ gymRate\ the\ rate\ to\ check\n\ @return\ true\ if\ rate\ is\ valid;\ false\ otherwise\n
comment4.params=memType
comment4.target=boolean\ memberTypeValid(MembershipType)
comment4.text=\n\ Determine\ whether\ the\ membership\ type\ is\ valid.\n\ @param\ memType\ the\ type\ of\ membership\n\ @return\ true\ if\ membership\ type\ is\ valid;\ false\ otherwise\n
comment5.params=firstName\ lastName\ typeOfMember\ hoursQ1\ hoursQ2\ hoursQ3\ hoursQ4
comment5.target=void\ addMember(java.lang.String,\ java.lang.String,\ MembershipType,\ int,\ int,\ int,\ int)
comment5.text=\n\ Create\ and\ add\ a\ new\ member\ to\ this\ gym.\n\ This\ adds\ a\ new\ member\ to\ a\ gym's\ list\ of\ members.\n\ The\ hoursQ1\ through\ hoursQ4\ parameters\ provide\n\ the\ number\ of\ personal\ trainer\ hours\ that\ the\n\ member\ paid\ for\ in\ each\ quarter\ of\ the\ year.\n\ @param\ firstName\ the\ first\ name\ of\ the\ member\n\ @param\ lastName\ the\ last\ name\ of\ the\ member\n\ @param\ typeOfMember\ the\ membership\ type\ of\ the\ member\n\ @param\ hoursQ1\ the\ number\ of\ hours\ for\ Q1\n\ @param\ hoursQ2\ the\ number\ of\ hours\ for\ Q2\n\ @param\ hoursQ3\ the\ number\ of\ hours\ for\ Q3\n\ @param\ hoursQ4\ the\ number\ of\ hours\ for\ Q4\n
comment6.params=member
comment6.target=void\ addMember(Member)
comment6.text=\n\ Add\ the\ specified\ member\ to\ this\ gym.\n\ Updates\ the\ list\ of\ members\ of\ this\ gym\ to\ include\n\ the\ specified\ member.\n\ @param\ member\ the\ member\ to\ be\ added\n
comment7.params=
comment7.target=java.lang.String\ createAnnualReport()
comment7.text=\n\ Create\ the\ annual\ report\ for\ this\ gym.\n\ This\ method\ returns\ a\ String,\ suitable\ for\ display\ on\ the\ console,\n\ with\ the\ names\ of\ each\ of\ the\ members\ and\ the\ amount\ of\ money\ they\ paid.\n\ The\ string\ returned\ must\ contain\ one\ line\ for\ each\ member.\n\ Each\ line\ shows\ the\ member,\ using\ {@link\ Member\#toString()},\n\ followed\ by\ the\ total\ amount\ of\ money\ that\ member\ paid\ for\ the\ year.\n\ For\ example,\n\ <PRE>\n\ Name\:\ Stan\ Lem\ spent\ $718.40\n\ Name\:\ Agatha\ Kristy\ spent\ $1,590.58\n\ Name\:\ Lee\ Jones\ spent\ $48.00\n\ </PRE>\n\ @return\ the\ annual\ report\ as\ a\ displayable\ string\n
comment8.params=
comment8.target=Member\ highestTrainingHours()
comment8.text=\n\ Determine\ and\ return\ the\ member\ with\ the\ highest\n\ number\ of\ training\ hours.\n\ This\ method\ goes\ through\ the\ list\ of\ all\ members\ and\n\ returns\ the\ member\ that\ has\ the\ highest\ number\ of\n\ personal\ training\ hours\ for\ the\ year.\n\ @return\ the\ member\ with\ the\ highest\ training\ hours\n
comment9.params=
comment9.target=int\ calculateTotalTrainingHours()
comment9.text=\n\ Calculate\ the\ total\ number\ of\ training\ hours\ of\n\ all\ members\ of\ this\ gym.\n\ This\ method\ sums\ up\ all\ the\ personal\ training\ hours\ for\ the\ gym\n\ for\ the\ four\ quarters\ and\ returns\ that\ total.\n\ @return\ the\ total\ number\ of\ training\ hours\n
numComments=18
