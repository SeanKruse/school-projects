#BlueJ class context
comment0.target=Hangman
comment0.text=\r\n\ A\ Hangman\ class\ that\ keeps\ track\ of\ the\ state\ of\ a\ game\ of\ hangman.\r\n\ Methods\ provide\ access\ to\ the\ current\ set\ of\ guesses,\r\n\ number\ of\ wrong\ guesses\ remaining,\ and\ the\ current\ pattern\r\n\ to\ be\ displayed\ to\ the\ user.\r\n\ \r\n\ @author\ Sean\ Kruse\r\n
comment1.params=dictionary\ length\ maxGuesses
comment1.target=Hangman(java.util.List,\ int,\ int)
comment2.params=limit
comment2.target=int\ getRand(int)
comment3.params=
comment3.target=java.util.Set\ words()
comment3.text=\r\n\ Access\ the\ set\ of\ candidate\ words;\r\n\ \ \ \ \ if\ size\ \=\=\ 1,\ contents\ are\ the\ actual\ goal\ word.\r\n\ @return\ the\ goal\ word\ or\ the\ candidate\ goal\ words\r\n
comment4.params=
comment4.target=int\ wrongGuessLimit()
comment4.text=\r\n\ Access\ the\ limit\ on\ wrong\ guesses.\r\n\ @return\ the\ number\ of\ wrong\ guesses\ that\ results\ in\ a\ player\ loss\r\n
comment5.params=
comment5.target=int\ guessesLeft()
comment5.text=\r\n\ Access\ the\ number\ of\ wrong\ guesses\ that\ result\ in\ a\ loss\r\n\ \ \ \ \ for\ the\ player\ given\ the\ current\ state\ of\ the\ game.\r\n\ @return\ the\ number\ of\ wrong\ guesses\ that\ would\ result\ in\ a\ loss\r\n
comment6.params=
comment6.target=java.util.SortedSet\ guesses()
comment6.text=\r\n\ Access\ the\ set\ of\ letters\ already\ guessed\ by\ the\ player.\r\n\ @return\ the\ set\ of\ letters\ guessed\ by\ the\ player\r\n
comment7.params=
comment7.target=java.lang.String\ pattern()
comment7.text=\r\n\ Return\ the\ hangman-style\ display\ pattern\ of\ letters\ and\ dashes\r\n\ (with\ interpolated\ spaces)\ appropriate\ to\ the\ current\ state\r\n\ based\ on\ the\ letters\ already\ guessed\ and\ the\ goal.\r\n\ @throws\ IllegalStateException\ if\ there\ is\ no\ goal\ word\r\n\ @return\ the\ hangman-style\ pattern\ to\ be\ displayed\ to\ the\ user\r\n
comment8.params=guess
comment8.target=int\ record(char)
comment8.text=\r\n\ Record\ state\ changes\ based\ on\ new\ letter\ guess.\r\n\ @throws\ IllegalStateException\ if\ no\ guesses\ left\ or\ no\ goal\ word\r\n\ @throws\ IllegalArgumentException\ if\ letter\ is\ already\ guessed\r\n\ @param\ guess\ the\ letter\ being\ guessed\r\n\ \ \ [Precondition\:\ guess\ must\ be\ lower-case\ letter]\r\n\ \ \ [Precondition\:\ guess\ must\ not\ be\ among\ letters\ already\ guessed]\r\n\ @return\ the\ number\ of\ occurrences\ of\ the\ guessed\ letter\ in\ the\ goal\r\n
numComments=9
